{"version":3,"sources":["demofs.coffee"],"names":[],"mappings":"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","file":"demofs.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'FUSEQL/demofs'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nurge                      = CND.get_logger 'urge',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# suspend                   = require 'coffeenode-suspend'\n# step                      = suspend.step\n# immediately               = suspend.immediately\n# after                     = suspend.after\n# sleep                     = suspend.sleep\nlater                     = setImmediate\n#...........................................................................................................\nFUSE                      = require 'fuse-bindings'\nmount_route               = './mnt'\nmount_locator             = njs_path.resolve __dirname, mount_route\n#...........................................................................................................\nOK                        = 0\nERROR                     = -1\n\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = demofs =\n\n  #---------------------------------------------------------------------------------------------------------\n  readdir: ( route, handler ) ->\n    echo \"readdir         #{rpr route}\"\n    if route == '/'\n      filenames = ( \"file-#{idx}\" for idx in [ 0 .. 10 ] )\n      filenames.push 'test'\n      return later -> handler OK, filenames\n    handler OK\n    return\n\n  #---------------------------------------------------------------------------------------------------------\n  getattr: ( route, handler ) ->\n    info \"getattr         #{rpr route}\"\n    switch route\n      when '/'\n        later -> handler OK,\n          mtime: new Date\n          atime: new Date\n          ctime: new Date\n          size: 100\n          mode: 16877\n          uid: process.getuid()\n          gid: process.getgid()\n      when '/test'\n        later -> handler OK,\n          mtime: new Date\n          atime: new Date\n          ctime: new Date\n          size: 12\n          mode: 33188\n          uid: process.getuid()\n          gid: process.getgid()\n      else\n        later -> handler OK,\n          mtime: new Date\n          atime: new Date\n          ctime: new Date\n          size: 1234\n          mode: 33188\n          uid: process.getuid()\n          gid: process.getgid()\n      # else\n      #   handler FUSE.ENOENT\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  open: (route, flags, handler) ->\n    info \"open            #{rpr route}, #{rpr flags}\"\n    later -> handler OK, 42\n    # 42 is an fd\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  read: ( route, fd, buffer, length, position, handler ) ->\n    info \"read            #{rpr route}, #{rpr fd}, #{rpr buffer}, #{rpr length}, #{rpr position}\"\n    relative_route  = route\n    relative_route  = \"/#{route}\" unless relative_route[ 0 ] is '/'\n    relative_route  = \".#{route}\" unless relative_route[ 0 ] is '.'\n    locator         = njs_path.resolve mount_locator, relative_route\n    # info '©jQFeh', relative_route\n    # info '©Qpb1T', mount_locator\n    # info '©zZVe3', locator\n    content = \"\"\"\n      hello world\n      from #{locator}\n      \\n\"\"\"\n    content = content.slice position\n    return handler 0 if content.length is 0\n    buffer.write content, 'utf-8'\n    later -> handler Buffer.byteLength content, 'utf-8'\n    return null\n\n"]}