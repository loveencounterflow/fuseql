{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'FUSEQL/main'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nurge                      = CND.get_logger 'urge',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# suspend                   = require 'coffeenode-suspend'\n# step                      = suspend.step\n# immediately               = suspend.immediately\n# after                     = suspend.after\n# sleep                     = suspend.sleep\n# later                     = setImmediate\n#...........................................................................................................\n# FUSE                      = require 'fuse-bindings'\n# mount_route               = './mnt'\n# mount_locator             = njs_path.resolve __dirname, mount_route\n#...........................................................................................................\nSQLITE3                   = ( require 'sqlite3' ).verbose()\nABSTRACTLEVELDOWN         = require 'abstract-leveldown'\nAbstractLevelDOWN         = ABSTRACTLEVELDOWN.AbstractLevelDOWN\n\n#-----------------------------------------------------------------------------------------------------------\n@_init = ->\n  \"\"\"Optionally remove existing DB file; create DB file if missing; create `main` table if \n  missing.\"\"\"\n\n#-----------------------------------------------------------------------------------------------------------\n@put = ( db, key, value, handler ) ->\n\n#-----------------------------------------------------------------------------------------------------------\n@get = ( db, key, handler ) ->\n\n#-----------------------------------------------------------------------------------------------------------\n@delete = ( db, key, handler ) ->\n\n#-----------------------------------------------------------------------------------------------------------\n@create_readstream = ( db, settings, handler ) ->\n\n#-----------------------------------------------------------------------------------------------------------\n@create_keystream = ( db, settings, handler ) ->\n\n#-----------------------------------------------------------------------------------------------------------\n@create_valuestream = ( db, settings, handler ) ->\n\n\n\n###\n  db.run \"\"\"\n    CREATE TABLE IF NOT EXISTS `demo` (\n      `key`   BLOB PRIMARY KEY,\n      `value` BLOB )\n      \"\"\"\n  \"\"\"\n    INSERT OR REPLACE INTO `demo` ( `key`, `value` ) \n    VALUES ( ?, ? )\n    \"\"\"\n###\n\n#-----------------------------------------------------------------------------------------------------------\nFakeLevelDOWN = ( location ) ->\n  AbstractLevelDOWN.call this, location\n  return\n\n#-----------------------------------------------------------------------------------------------------------\n( require 'util' ).inherits FakeLevelDOWN, AbstractLevelDOWN\n\n\n#-----------------------------------------------------------------------------------------------------------\nFakeLevelDOWN::_open = (options, callback) ->\n  # initialise a memory storage object\n  @_store = {}\n  # optional use of nextTick to be a nice async citizen\n  process.nextTick (->\n    callback null, this\n    return\n  ).bind(this)\n  return\n\n#-----------------------------------------------------------------------------------------------------------\nFakeLevelDOWN::_put = (key, value, options, callback) ->\n  key = '_' + key\n  # safety, to avoid key='__proto__'-type skullduggery \n  @_store[key] = value\n  process.nextTick callback\n  return\n\n#-----------------------------------------------------------------------------------------------------------\nFakeLevelDOWN::_get = (key, options, callback) ->\n  value = @_store['_' + key]\n  if value == undefined\n    # 'NotFound' error, consistent with LevelDOWN API\n    return process.nextTick(->\n      callback new Error('NotFound')\n      return\n    )\n  process.nextTick ->\n    callback null, value\n    return\n  return\n\n#-----------------------------------------------------------------------------------------------------------\nFakeLevelDOWN::_del = (key, options, callback) ->\n  delete @_store['_' + key]\n  process.nextTick callback\n  return\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = FakeLevelDOWN\n\n"]}