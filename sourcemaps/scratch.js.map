{"version":3,"sources":["scratch.coffee"],"names":[],"mappings":"AAKA;AAAA,MAAA;;EAAA,QAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,MAAA,GAA4B,OAAA,CAAQ,IAAR;;EAE5B,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAE5B,OAAA,GAA4B,OAAA,CAAQ,oBAAR;;EAC5B,IAAA,GAA4B,OAAO,CAAC;;EAIpC,KAAA,GAA4B;;EAE5B,OAAA,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,QAAA,GAA4B,QAAQ,CAAC,IAAT,CAAc,SAAd,EAAyB,YAAzB;;EAE5B,IAAG,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAAH;IACE,IAAA,CAAK,iBAAA,GAAkB,QAAvB;IACA,MAAM,CAAC,UAAP,CAAkB,QAAlB,EAFF;;;EAIA,EAAA,GAAgB,IAAA,OAAO,CAAC,QAAR,CAAiB,QAAjB;;EAIhB,EAAE,CAAC,SAAH,CAAa,SAAA;AACX,QAAA;IAAA,EAAE,CAAC,GAAH,CAAO,+EAAP;IAIA,SAAA,GAAY,EAAE,CAAC,OAAH,CAAW,uDAAX;AACZ,SAAW,+BAAX;MACE,IAAA,GAAY,IAAA,GAAI,CAAC,GAAA,GAAM,GAAP;MAChB,QAAA,GAAgB,IAAA,MAAA,CAAO,IAAP,EAAa,OAAb;MAChB,KAAA,GAAY,EAAA,GAAG;MACf,SAAA,GAAgB,IAAA,MAAA,CAAO,KAAP,EAAc,OAAd;MAChB,SAAS,CAAC,GAAV,CAAc,QAAd,EAAwB,SAAxB;AALF;IAMA,SAAS,CAAC,QAAV,CAAA;IAEA;IAEA,GAAA,GAAM;IAMN,EAAE,CAAC,IAAH,CAAQ,GAAR,EAAa,SAAE,KAAF,EAAS,MAAT;MACX,IAAe,aAAf;AAAA,cAAM,MAAN;;MACA,KAAA,CAAM,QAAN,EAAgB,MAAhB,EAAwB,GAAA,CAAI,MAAQ,CAAA,KAAA,CAAO,CAAC,QAAhB,CAAyB,OAAzB,CAAJ,CAAxB;AACA,aAAO;IAHI,CAAb;AAIA,WAAO;EA1BI,CAAb;AAlCA","file":"scratch.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'FUSEQL/main'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nurge                      = CND.get_logger 'urge',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\n# immediately               = suspend.immediately\n# after                     = suspend.after\n# sleep                     = suspend.sleep\nlater                     = setImmediate\n#...........................................................................................................\nSQLITE3                   = require 'sqlite3'\ndb_route                  = njs_path.join __dirname, '../demo.db'\n#...........................................................................................................\nif njs_fs.existsSync db_route\n  warn \"removing DB at #{db_route}\"\n  njs_fs.unlinkSync db_route\n#...........................................................................................................\ndb        = new SQLITE3.Database db_route\n# db        = new SQLITE3.Database ':memory:'\n\n\ndb.serialize ->\n  db.run \"\"\"CREATE TABLE IF NOT EXISTS `demo` (\n    `key` BLOB PRIMARY KEY,\n    `value` BLOB\n    )\"\"\"\n  statement = db.prepare \"\"\"INSERT INTO `demo` ( `key`, `value` ) VALUES ( ?, ? )\"\"\"\n  for idx in [ 0 .. 10 ]\n    name      = \"nr#{100 - idx}\"\n    name_bfr  = new Buffer name, 'utf-8'\n    value     = \"#{idx}\"\n    value_bfr = new Buffer value, 'utf-8'\n    statement.run name_bfr, value_bfr\n  statement.finalize()\n  #.........................................................................................................\n  \"\"\"INSERT OR REPLACE INTO `demo` ( `key`, `value` ) VALUES ( \"a\", \"c\" )\"\"\"\n  #.........................................................................................................\n  sql = \"\"\"\n    SELECT `key`, `value` \n    FROM `demo`\n    ORDER BY `key` ASC\n    \"\"\"\n  #.........................................................................................................\n  db.each sql, ( error, record ) ->\n    throw error if error?\n    debug 'Â©ZYjLy', record, rpr record[ 'key' ].toString 'utf-8'\n    return null\n  return null\n\n\n"]}